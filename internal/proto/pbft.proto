syntax = "proto3";

package proto;

import "gorums.proto";

import "google/protobuf/empty.proto";

option go_package = "github.com/joe-zxh/pbft/internal/proto";

service PBFT {
  rpc PrePrepare(PrePrepareArgs) returns (google.protobuf.Empty) {
    option (gorums.multicast) = true;
  }

  rpc Prepare(PrepareArgs) returns (google.protobuf.Empty) {
    option (gorums.multicast) = true;
  }

  rpc Commit(CommitArgs) returns (google.protobuf.Empty) {
    option (gorums.multicast) = true;
  }

  rpc ViewChange(ViewChangeArgs) returns (google.protobuf.Empty) {
    option (gorums.multicast) = true;
  }

  rpc NewView(NewViewArgs) returns (google.protobuf.Empty) {
    option (gorums.multicast) = true;
  }
}

message Pm {
  PrePrepareArgs PP = 1;
  repeated PrepareArgs P = 2;
}

message CheckPointArgs {
  uint32 Seq = 1;
  bytes Digest = 2;
  uint32 Rid = 3;
}

message CheckPoint {
  uint32 Seq =1;
  bool Stable = 2;
  bytes State = 3;
  repeated CheckPointArgs Proof = 4;
}

message ViewChangeArgs {
  uint32 View = 1;
  CheckPoint CP = 2;
  repeated Pm P = 3;
  uint32 Rid = 4;
}

message NewViewArgs {
  uint32 View = 1;
  repeated ViewChangeArgs V = 2;
  repeated PrePrepareArgs O = 3;
}

// log replication的协议消息

message Command {bytes Data = 1;}

message PrePrepareArgs {
  uint32 View = 1;
  uint32 Seq = 2;
  repeated Command Commands = 3;
}

message PrepareArgs {
  uint32 View = 1;
  uint32 Seq = 2;
  bytes Digest = 3;
}

message CommitArgs {
  uint32 View = 1;
  uint32 Seq = 2;
  bytes Digest = 3;
}
